const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const fs = require('fs');
const app = express();
const port = process.env.PORT || 3000;

const token = process.env.BOT_TOKEN; // BOT TOKEN c·ªßa b·∫°n

// Kh·ªüi t·∫°o bot
const bot = new TelegramBot(token, { polling: true });

// Set Webhook (n·∫øu c·∫ßn, ho·∫∑c b·ªè qua khi polling)
const webHookUrl = 'https://telegram-auto-reply-bot.onrender.com/';
bot.setWebHook(webHookUrl);

// L∆∞u s·ªë d∆∞ ng∆∞·ªùi d√πng
let users = {};

// Load s·ªë d∆∞ t·ª´ file
const loadUsers = () => {
  if (fs.existsSync('users.json')) {
    users = JSON.parse(fs.readFileSync('users.json'));
  }
};

// L∆∞u s·ªë d∆∞ v√†o file
const saveUsers = () => {
  fs.writeFileSync('users.json', JSON.stringify(users, null, 2));
};

loadUsers();

// Middleware Express ƒë·ªÉ UptimeRobot ping
app.get('/', (req, res) => {
  res.send('Bot ƒëang ch·∫°y!');
});

app.listen(port, () => {
  console.log(`Server ƒëang ch·∫°y t·∫°i c·ªïng ${port}`);
});

// Bot commands

// /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  if (!users[chatId]) {
    users[chatId] = { balance: 1000 }; // S·ªë d∆∞ m·∫∑c ƒë·ªãnh
    saveUsers();
  }
  bot.sendMessage(chatId, `Ch√†o m·ª´ng! B·∫°n c√≥ ${users[chatId].balance} xu.`);
});

// /sodu
bot.onText(/\/sodu/, (msg) => {
  const chatId = msg.chat.id;
  const balance = users[chatId] ? users[chatId].balance : 0;
  bot.sendMessage(chatId, `S·ªë d∆∞ c·ªßa b·∫°n: ${balance} xu.`);
});

// /xucsac
bot.onText(/\/xucsac/, (msg) => {
  const chatId = msg.chat.id;
  const dice = Math.floor(Math.random() * 6) + 1;
  bot.sendMessage(chatId, `üé≤ K·∫øt qu·∫£ x√∫c x·∫Øc: ${dice}`);
});

// /taixiu
bot.onText(/\/taixiu (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const choice = match[1].toLowerCase();
  if (!users[chatId]) users[chatId] = { balance: 1000 };
  if (users[chatId].balance < 100) {
    return bot.sendMessage(chatId, `B·∫°n kh√¥ng ƒë·ªß xu ƒë·ªÉ ch∆°i (c·∫ßn 100 xu).`);
  }
  const dice = Math.floor(Math.random() * 6) + 1 + Math.floor(Math.random() * 6) + 1;
  const result = dice <= 6 ? 'x·ªâu' : 't√†i';
  let message = `üé≤ T·ªïng ƒëi·ªÉm: ${dice} (${result.toUpperCase()})\n`;

  if (choice === result) {
    users[chatId].balance += 100;
    message += `B·∫°n th·∫Øng! +100 xu.\n`;
  } else {
    users[chatId].balance -= 100;
    message += `B·∫°n thua! -100 xu.\n`;
  }
  saveUsers();
  message += `S·ªë d∆∞ hi·ªán t·∫°i: ${users[chatId].balance} xu.`;
  bot.sendMessage(chatId, message);
});

// /nap
bot.onText(/\/nap (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const amount = parseInt(match[1]);
  if (!users[chatId]) users[chatId] = { balance: 1000 };
  users[chatId].balance += amount;
  saveUsers();
  bot.sendMessage(chatId, `B·∫°n ƒë√£ n·∫°p th√†nh c√¥ng ${amount} xu.\nS·ªë d∆∞ m·ªõi: ${users[chatId].balance} xu.`);
});
